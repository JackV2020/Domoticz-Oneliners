/*
-----------------------------------------------------------------------

 This configuration file is to add/change/delete generic custom sensors.

 Below are example definitions you may use.

 To remove a sensor remove section or comment the section of that sensor.
   To activate removals you need to restart the plugin.

 You can change Description, Units, Command
   To activate changes you need to restart the plugin.

 To add a new sensor you :
   Copy an existing sensor
   Change the fields to what you want
   First test your Command on the command line
   To activate additions you need to restart the plugin.

 The are 2 special prefixes you can put in front of your command :

      '#+ '  : add the two results of the oneliner
      '@+ '  : add the two results of two before defined sensors

 Examples for these prefixes are below with 'Description=Network load Kbit/s in+out'

-----------------------------------------------------------------------

 The examples below are mostly performance related for a RaspBerry Pi.
 So some may not work on your system.
 The last one gets the value of the AEX index by means of curl.

 REQUIREMENTS for the examples below :

 You need to have installed the software needed by the commands.

 This means you may need to :

   sudo apt install ifstat -y
   sudo apt-get install sysstat -y     ( needed for iostat )
   sudo apt install bc -y
   sudo apt install curl -y

 When a sensor does not deliver any data check the command by
 entering it on a command line.

-----------------------------------------------------------------------
*/
#Description=Network load Kbit/s in
#Name=pi31> I
#Type=Custom
#Image=JVCloud
#Units=Kbit/s
#Command=ifstat -b -i eth0 1 1 | grep -v t | tr -s " " | sed -e "s/^[ \t]*//" | cut -d " " -f 1
## ifstat 1 sec 1 line | get data line | trim multiple spaces | remove leading space | get first field
##-----------------------------------------------------------------------
#Description=Network load Kbit/s out
#Name=pi31> O
#Type=Custom
#Image=JVCloud
#Units=Kbit/s
#Command=ifstat -b -i eth0 1 1 | grep -v t | tr -s " " | sed -e "s/^[ \t]*//" | cut -d " " -f 2
## ifstat 1 sec 1 line | get data line | trim multiple spaces | remove leading space | get last field
##-----------------------------------------------------------------------
## NOTE that this one will not show up because it is commented out.
##Description=Network load KB/s in+out
##Name=pi31> Net total
##Type=Custom
##Image=JVElectricity
##Units=KB/s
##Command=#+ ifstat -i eth0 1 1 | grep -v t | tr -s " " | sed -e "s/^[ \t]*//" 
## "#+ " means add the two results from the oneliner
### ifstat 1 sec 1 line | get data line | trim multiple spaces | remove leading space and return both fields
##-----------------------------------------------------------------------
## NOTE that this one gives better results than the previous one because it adds already saved sensors
## When you use the previous one there is almost a guarantee that the two numbers to be added are not the same 
## as just retrieved before so the sum will 'not seem to be right' in Domoticz
#Description=Network load Kbit/s in+out
#Name=pi31> T
#Type=Custom
#Image=JVCloud
#Units=Kbit/s
#Command=@+ "pi31> I" "pi31> O"
## @+ means add next two already existing counters ( these were defined above )
#-----------------------------------------------------------------------
#Description=Antaurus in €
#Name=pi31> Antaurus
#Type=Custom
#Image=Euro
#Units=€
#Command=curl --connect-timeout 1 "https://www.antaurus.nl/nl/rendementen" -s | head -n 20 | grep -Po '€\K[^.]*' | sed 'sx,x.xg'
##-----------------------------------------------------------------------
#Description=Monitor login
#Name=pi31> Igor login
#Type=Custom
#Image=Computer
#Units=count
#Command=curl 'http://q:a@192.168.2.13:8080/json.htm?type=command&param=getlog&lastlogtime=0&loglevel=268435455' 2>/dev/null | grep "'Igor'" | wc | tr -s " " | cut -d " " -f 2
##-----------------------------------------------------------------------
Description=Barometer1 Temperature
Name=b1> Temperature
Type=Custom
Image=Heating
Units=°C
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Temperature":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Pressure
Name=b1> Pressure
Type=Custom
Image=Luchtdruk
Units=hPa
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Pressure":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Humidity
Name=b1> Humidity
Type=Custom
Image=Water
Units=%
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Humidity":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Humidity Index
Name=b1> Humidex
Type=Custom
Image=Heating
Units=
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Humidex":"\K[^"]*'

##-----------------------------------------------------------------------
Description=barometerkamer Temperature
Name=Huis> Temperatuur
Type=Custom
Image=Heating
Units=°C
Command=curl --max-time 5 -s http://barometerkamer.home/json | grep -Po '"Temperature":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerkamerPressure
Name=Huis> Luchtdruk
Type=Custom
Image=Luchtdruk
Units=hPa
Command=curl --max-time 5 -s http://barometerkamer.home/json | grep -Po '"Pressure":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerkamer Humidity
Name=Huis> Vochtigheid
Type=Custom
Image=Water
Units=%
Command=curl --max-time 5 -s http://barometerkamer.home/json | grep -Po '"Humidity":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerkamer Humidity Index
Name=Huis> Humidex
Type=Custom
Image=Heating
Units=#
Command=curl --max-time 5 -s http://barometerkamer.home/json | grep -Po '"Humidex":"\K[^"]*'

##-----------------------------------------------------------------------
Description=barometerburo Temperature
Name=Buro> Temperatuur
Type=Custom
Image=Heating
Units=°C
Command=curl --max-time 5 -s http://barometerburo.home/json | grep -Po '"Temperature":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerburoPressure
Name=Buro> Luchtdruk
Type=Custom
Image=Luchtdruk
Units=hPa
Command=curl --max-time 5 -s http://barometerburo.home/json | grep -Po '"Pressure":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerburo Humidity
Name=Buro> Vochtigheid
Type=Custom
Image=Water
Units=%
Command=curl --max-time 5 -s http://barometerburo.home/json | grep -Po '"Humidity":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerburo Humidity Index
Name=Buro> Humidex
Type=Custom
Image=Heating
Units=#
Command=curl --max-time 5 -s http://barometerburo.home/json | grep -Po '"Humidex":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerburo hPa/hour
Name=Buro> hPa/h
Type=Custom
Image=Luchtdruk
Units=hPa/h
Command=curl --max-time 5 -s http://barometerburo.home/json | grep -Po '"Pressure1h":"\K[^"]*'
#-----------------------------------------------------------------------
Description=barometerburo hPa/2hours
Name=Buro> hPa/2h
Type=Custom
Image=Luchtdruk
Units=hPa/2h
Command=curl --max-time 5 -s http://barometerburo.home/json | grep -Po '"Pressure2h":"\K[^"]*'
/*
#-----------------------------------------------------------------------
Description=Barometer1 Dewpoint
Name=b1> Dewpoint
Type=Custom
Image=Heating
Units=°C
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Dewpoint":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Humidity Index
Name=b1> Humidex
Type=Custom
Image=Heating
Units=
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Humidex":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Pressure1h
Name=b1> Pressure1h
Type=Custom
Image=Luchtdruk
Units=hPa/h
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Pressure1h":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Pressure2h
Name=b1> Pressure2h
Type=Custom
Image=Luchtdruk
Units=hPa/2h
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"Pressure2h":"\K[^"]*'
#-----------------------------------------------------------------------
#Description=Barometer1 FreeHeap
#Name=b1> FreeHeap
#Type=Custom
#Image=JVHashTag
#Units=
#Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"FreeHeap":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 Heap Fragmentation
Name=b1> Fragmentation
Type=Custom
Image=JVHashTag
Units=
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"HeapFragmentation":"\K[^"]*'
#-----------------------------------------------------------------------
#Description=Barometer1 MaxFreeBlockSize
#Name=b1> MaxFreeBlockSize
#Type=Custom
#Image=JVHashTag
#Units=
#Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"MaxFreeBlockSize":"\K[^"]*'
#-----------------------------------------------------------------------
#Description=Barometer1 logSize
#Name=b1> logSize
#Type=Custom
#Image=JVHashTag
#Units=
#Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"logSize":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 loopCounter
Name=b1> loopCounter
Type=Custom
Image=JVHashTag
Units=
Command=curl --max-time 5 -s http://barometer.home/json | grep -Po '"loopCounter":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Barometer1 ping
Name=b1> Ping.
Type=Custom
Image=Computer
Units=X 
Command=sudo ping barometer -c 1 >/dev/null 2>&1 ; if [ $? -eq 2 ] ; then echo 0 ; else ping barometer -c 4 -i 0.2 | grep packet | cut -f 4 -d " " ; fi
#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
Description=Test Barometer loopCounter
Name=test> loopCounter
Type=Custom
Image=JVHashTag
Units=
Command=curl --max-time 5 -s http://test.home/json | grep -Po '"loopCounter":"\K[^"]*'
#-----------------------------------------------------------------------
Description=Test Barometer ping
Name=test> Ping.
Type=Custom
Image=Computer
Units=X 
Command=sudo ping test -c 1 >/dev/null 2>&1 ; if [ $? -eq 2 ] ; then echo 0 ; else ping test -c 4 -i 0.2 | grep packet | cut -f 4 -d " " ; fi
#-----------------------------------------------------------------------
*/
