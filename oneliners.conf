#-----------------------------------------------------------------------
#
# This configuration file is to add/change/delete generic custom sensors.
#
#-----------------------------------------------------------------------
#
# The examples below are mostly performance related for a RaspBerry Pi.
# There is also one getting AEX stock index from Internet by means of curl.
# There is one checking a user login in your Domoticz
#
# REQUIREMENTS for the examples below :
#
# You need to have installed the software needed by the commands.
#
# This means you may need to :
#
#   sudo apt install ifstat -y
#   sudo apt-get install sysstat -y     ( needed for iostat )
#   sudo apt install bc -y
#   sudo apt install curl -y
#
# Some may not work for you because of IP address, other USB device etc.
# When a sensor does not deliver any data check the command by
# entering it on a command line.
#
#-----------------------------------------------------------------------
Description=Network load Kbit/s in
Name=perf> I
Type=Custom
Image=JVCloud
Units=Kbit/s
Command=ifstat -b -i eth0 1 1 | grep -v t | tr -s " " | sed -e "s/^[ \t]*//" | cut -d " " -f 1
# ifstat 1 sec 1 line | get data line | trim multiple spaces | remove leading space | get first field
#-----------------------------------------------------------------------
Description=Network load Kbit/s out
Name=perf> O
Type=Custom
Image=JVCloud
Units=Kbit/s
Command=ifstat -b -i eth0 1 1 | grep -v t | tr -s " " | sed -e "s/^[ \t]*//" | cut -d " " -f 2
# ifstat 1 sec 1 line | get data line | trim multiple spaces | remove leading space | get last field
#-----------------------------------------------------------------------
# NOTE that this one will not show up because it is commented out.
#Description=Network load KB/s in+out
#Name=perf> Net total
#Type=Custom
#Image=JVElectricity
#Units=KB/s
#Command=#+ ifstat -i eth0 1 1 | grep -v t | tr -s " " | sed -e "s/^[ \t]*//" 
# "#+ " means add the two results from the oneliner
## ifstat 1 sec 1 line | get data line | trim multiple spaces | remove leading space and return both fields
#-----------------------------------------------------------------------
# NOTE that this one gives better results than the previous one because it adds already saved sensors
# When you use the previous one there is almost a guarantee that the two numbers to be added are not the same 
# as just retrieved before so the sum will 'not seem to be right' in Domoticz
Description=Network load Kbit/s in+out
Name=perf> T
Type=Custom
Image=JVCloud
Units=Kbit/s
Command=@+ "perf> I" "perf> O"
# @+ means add next two already existing counters ( these were defined above )
#-----------------------------------------------------------------------
Description=System Load on 4 cores last minute
Name=perf> L.1
Type=Custom
Image=WallSocket
Units=of 4
Command=uptime | cut -d , -f 3 | cut -d : -f 2
# uptime info | replace multiple spaces by single space | cut out the right field in 2 steps
#-----------------------------------------------------------------------
Description=System Load on 4 cores last 5 minutes
Name=perf> L.5
Type=Custom
Image=WallSocket
Units=of 4
Command=uptime | cut -d , -f 4
# uptime info | cut out the right field 
#-----------------------------------------------------------------------
Description=System Load on 4 cores last 15 minutes
Name=perf> L.15
Type=Custom
Image=WallSocket
Units=of 4
Command=uptime | cut -d , -f 5 
# uptime info | cut out the right field
#-----------------------------------------------------------------------
Description=Idle time
Name=perf> Idle
Type=Custom
Image=SavingPiggy
Units=%
Command=iostat | head -n 4 | tail -n 1 | tr -s " " | cut -d " " -f 7
# uptime info | cut out the right field
#-----------------------------------------------------------------------
Description=Free Memory in MB
Name=perf> Free
Type=Custom
Image=JVWheelBlueOne
Units=MB
Command=free -m | grep Mem | tr -s " " | cut -d " " -f 4
# memory info | filter memory | replace multiple spaces by single space | get 4th field
#-----------------------------------------------------------------------
Description=Available Memory in MB
Name=perf> Avail.
Type=Custom
Image=JVWheelBlueOne
Units=MB
Command=free -m | grep Mem | tr -s " " | cut -d " " -f 7
# memory info | filter memory | replace multiple spaces by single space | get 7th field
#-----------------------------------------------------------------------
Description=Free Swap Space in MB
Name=perf> Swap
Type=Custom
Image=JVWheelBlueOne
Units=MB
Command=free -m | grep Swap | tr -s " " | cut -d " " -f 4
# memory info | filter swap | replace multiple spaces by single space | get 4th field
#-----------------------------------------------------------------------
Description=Root Usage in %
Name=perf> Root
Type=Custom
Image=Harddisk
Units=%
Command=df -h | grep -e /$ | tr -s " " | cut -d " " -f 5 | sed s/%//
# disk usage all disks | find line with / at end | replace multiple spaces by single space | get 5th field | remove %
#-----------------------------------------------------------------------
#
# I have a USB disk mounted on my Pi in /mnt/Share0 so this one may not get data for you
#
Description=USB disk mounted on /mnt/Share0 Usage in %
Name=perf> USB Disk
Type=Custom
Image=Harddisk
Units=%
Command=df -h | grep -e /Share0$ | tr -s " " | cut -d " " -f 5 | sed s/%//
# disk usage all disks | find line with /Share0 at end | replace multiple spaces by single space | get 5th field | remove %
#-----------------------------------------------------------------------
#
# I run Domoticz from a RAM disk to spare my uSD card.
#
# I plan to make a description in https://github.com/JackV2020/Domoticz-RAMDisk available.
# It may be there when you read this. In short....
#
# The database does not support the log to reside on a RAM disk anymore.
# This is why I decided to run the complete Domoticz from a RAM disk.
# My 'systemctl stop domoticz' shuts Domoticz and copies the RAM disk to uSD.
# So my 'systemctl start domoticz' copies the backup to RAM disk and starts Domoticz.
# systemctl restart is a combination of stop and start so works too.
# A cron job which restart my domoticz each night makes sure I do not loose too much data.
#
Description=RAM disk Usage in %
Name=perf> Ram Disk
Type=Custom
Image=Harddisk
Units=%
Command=df -h | grep -i -e /domoticz$ | tr -s " " | cut -d " " -f 5 | sed s/%//
# disk usage all disks | find line with /domoticz at end | replace multiple spaces by single space | get 5th field | remove %
#-----------------------------------------------------------------------
Description=Temperature in Â°C
Name=perf> Temp.
Type=Custom
Image=Heating
Units=Â°C
Command=vcgencmd measure_temp | cut -d = -f 2 | sed s/..$//
# show temperature | get part after = | remove 2 characters ('C) at end of line
#-----------------------------------------------------------------------
Description=Uptime in seconds
Name=perf> Up
Type=Custom
Image=Computer
Units=sec
Command=cat /proc/uptime | cut -d . -f 1
# first field in uptime is uptime in seconds, second field is idle time
#-----------------------------------------------------------------------
#https://www.raspberrypi.org/forums/viewtopic.php?t=34348
Description=Clock Speed in MHz
Name=perf> Clck
Type=Custom
Image=Computer
Units=MHz
Command=echo `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq` / 1000 | bc
#-----------------------------------------------------------------------
Description=AEX in â‚¬
Name=stock> AEX
Type=Custom
Image=Euro
Units=â‚¬
Command=curl --connect-timeout 1 -s https://www.beleggen.nl/koersen/aex.aspx | grep 12272LastPrice | head -n 1 | cut -d "=" -f 2 | sed s/\;//
#-----------------------------------------------------------------------
# Here I ping another Pi and Units contains some funny characters
Description=Ping pi31 4 times, 0-lost 1+=ok
Name=perf> Pi31 ping
Type=Custom
Image=Computer
Units=(1+>ðŸ¤© 0>ðŸ¤•) 
Command=sudo ping 192.168.2.13 -c 1 >/dev/null 2>&1 ; if [ $? -eq 2 ] ; then echo 0 ; else ping 192.168.2.13 -c 4 -i 0.2 | grep packet | cut -f 4 -d " " ; fi
#Command=sudo ping pi31.home -c 1 >/dev/null 2>&1 ; if [ $? -eq 2 ] ; then echo 0 ; else ping pi31.home -c 4 -i 0.2 | grep packet | cut -f 4 -d " " ; fi
#Command=sudo ping pi31.home -c 4 | grep packet | cut -f 4 -d " " 
#-----------------------------------------------------------------------
#
# This is to monitor my 'Jack' logons to my other Pi
# Put in the right name / IP address for your Pi
# When you have users with passwords on your pi replace user 'q' and password 'a'
#
Description=Monitor login
Name=audit> Jack login
Type=Custom
Image=Computer
Units=count
Command=curl 'http://q:a@192.168.2.13:8080/json.htm?type=command&param=getlog&lastlogtime=0&loglevel=268435455' 2>/dev/null | grep "'Jack'" | wc | tr -s " " | cut -d " " -f 2
#-----------------------------------------------------------------------
